package com.kakao.school;

import java.text.DateFormat;
import java.util.Date;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.kakao.school.domain.Command;


/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {

	// 로그를 기록하기 위한 객체
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);

	/**
	 * Simply selects the home view to render by returning its name.
	 */
	// 요청이 GET 방식으로 왔을 때 처리하는 메서드
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);

		Date date = new Date();
		DateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);

		String formattedDate = dateFormat.format(date);

		// View에게 데이터 전달
		// serverTime이라는 이름으로 foramttedDate라는 데이터를 전달
		model.addAttribute("serverTime", formattedDate );

		// 리턴하는 문자열이 View 이름
		// servlet-context.xml 파일에서 View Resolver를 추가해서 실제 출력할 View가 결졍된다.
		return "home";
	}
	
	@RequestMapping(value = "/hello", method = RequestMethod.GET)
	public String hello(Model model) {

		model.addAttribute("message", "Hello!");

		return "hello";
	}
	
	@RequestMapping(value = "/message/detail/{num}", method = RequestMethod.GET)
	public String detail(Model model, @PathVariable("num") int num) {
		
		model.addAttribute("num", num);
		
		return "detail";
	}
	
	@RequestMapping(value = "param1", method=RequestMethod.GET)
	public String param1(Model model, HttpServletRequest req) {
		// 전통적인 자바 웹 프로그래밍에서의 파라미터 읽기
		String name = req.getParameter("name");
		String passwd = req.getParameter("passwd");
		
		logger.info("name : " + name);
		logger.info("passwd : " + passwd);
		
		return "";
	}
	
	@RequestMapping(value="param2", method=RequestMethod.POST)
	public String param2(Model model, @RequestParam("name") String name, @RequestParam("passwd") String passwd) {
		
		logger.info("name : " + name);
		logger.info("passwd : " + passwd);
		
		return "";	
	}
	
	@RequestMapping(value = "param3", method = RequestMethod.POST)
	public String param3(Model model, Command command) {
		logger.info(command.toString());
		return "";
	}
	
	@RequestMapping(value = "redirect", method = RequestMethod.POST)
	public String redirect(Model model) {
		
		return "redirect:disp";
	}
}
